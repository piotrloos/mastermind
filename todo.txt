# this sprint:

# TODO: refactor similar methods in Game/Helper/Solver
# TODO: show possible solutions for Solver1 right after starting a game
# TODO: tests, tests, tests...

# next sprint:

# TODO: implementation settings: allow_duplicates, allow_blanks
# TODO: rename pegs and colors into colorpegs
# TODO: setting for disabling Progress
# TODO: time formatting in minutes, seconds, miliseconds
# TODO: releasing the memory after game ends
# TODO: info about sys.getsizeof() for patterns list
# TODO: type hints in variables, method and functions declarations
# TODO: clean up in method and property names (__name)
# TODO: measuring time for human thinking

# shell commands:

# TODO: !next: next possible solution in Helper
# TODO: !help: possible commands, instruction etc.
# TODO: !exit: exit the game
# TODO: !list: list of possible solutions in Helper (only Solver2?)
# TODO: !undo: undo last turn (possible after filtering?)
# TODO: !giveup: give up, show solution (new `_game_status`?)
# TODO: !restart: restart game with the same solution (the same settings)
# TODO: !reset: restart game with new solution (the same settings)
# TODO: !shuffle: shuffling patterns list
# TODO: !sort: sorting patterns list (undo shuffle)
# TODO: !settings: show settings

# future ideas:

# TODO: Solver1 - counting the number of generator's possible solutions (copying gen with state)
# TODO: Solver2 - create 2-dim matrix 3-state (must be, can be, can't be) for every peg position and every color
# TODO: optimisation for grouped filtering patterns (Solver1 and Solver2)
# TODO: Solver1 - speed up calculations:
# TODO:     rating for result, filtering by all() based on priority
# TODO:     changing the most significant peg
# TODO:     multithreading
# TODO: printing levels - error, warning, info, prompt
# TODO: divide classes `Game` and `Solver` to be inherit (HumanGame(Game))
# TODO: computer vs computer
# TODO: time tests for different settings in loop
# TODO: Solver3 - my solving algorithm based on python-constraint
