# do zrobienia w najbliższym czasie:

# TODO: exhausted generator bug

# TODO: parametry wejściowe przy uruchamianiu gry
# TODO: przenieść pętlę input do klasy
# TODO: uruchamianie gry z podanym obiektem Settings
# TODO: porozdzielanie klas do różnych plików
# TODO: stworzenie pliku `readme.md`

# TODO: klasa Generator dla MODE 2?

# optymalizacja

# TODO: optymalizacja grupowego filtrowania patternów (MODE 1 i MODE 2)

# polecenia "shella":

# TODO: możliwość wpisywania poleceń:
# TODO: !next: inna propozycja rozwiązania w Helperze
# TODO: !help: pomoc, możliwe polecenia, instrukcja gry
# TODO: !exit: skrót do wyjścia z gry
# TODO: !list: lista możliwych rozwiązań w Helperze (tylko MODE 2?)
# TODO: !undo: cofnięcie ostatniego ruchu
# TODO: !pass: opcja poddania się (nowy `_game_status`)
# TODO: !restart: restart gry z tym samym rozwiązaniem
# TODO: !reset: restart gry z nowym rozwiązaniem przy tych samych ustawieniach
# TODO: !shuffle: wymieszanie listy patternów
# TODO: !sort: posortowanie listy patternów
# TODO: !settings: wyświetlenie parametrów gry

# później, pomysły itp.:

# TODO: MODE1 - liczenie liczby możliwych patternów generatora (kopiowanie generatora wraz ze stanem)
# TODO: formatowanie patternów za pomocą małych/dużych liter, liczb, zaczynanie od innej litery
# TODO: opcje: allow_duplicates, allow_blanks
# TODO: formatowanie patternów (Colorama)
# TODO: MODE 1 - przyspieszenie generatora:
# TODO:     ocena ważności wyniku i sprawdzanie all() po ważności
# TODO:     szybkie odrzucenie błędnych patternów (przeskok generatora o najbardziej znaczący peg)
# TODO:     wielowątkowość
# TODO: poziom printowania komunikatów
# TODO: rozdzielenie klas `Game` i `Solver` na część ludzką dziedziczoną po części komputerowej
# TODO: możliwość gry komputera samego ze sobą
# TODO: testy czasowe, wielokrotne uruchamianie gry i mierzenie czasu
# TODO: testy, testy, testy...
